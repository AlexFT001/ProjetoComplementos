
CREATE TABLESPACE
BankingStart  DATAFILE 
'/home/oracle/brightbank/BankingStart.dat'
SIZE 1m
REUSE
AUTOEXTEND ON NEXT 1M MAXSIZE 10M;


drop tablespace BankingStart;


CREATE TABLE ENDERECO(
	NEndereco NUMBER(7) GENERATED ALWAYS AS IDENTITY
	(START WITH 1000 INCREMENT BY 1),
	Rua VARCHAR2(10) NOT NULL,
	CodPostal NUMBER(7) NOT NULL,
	NumPorta NUMBER(2) NOT NULL,
	Cidade VARCHAR2(10) NOT NULL,
	CONSTRAINT pk_ENDERECO_NEndereco PRIMARY KEY(NEndereco)
)
TABLESPACE BankingStart
PCTFREE 15 
PCTUSED 40
;

CREATE TABLE AGENCIA(
	NAgencia NUMBER(7) GENERATED ALWAYS AS IDENTITY
	(START WITH 1000 INCREMENT BY 1),
	ENDERECO_NEndreco NUMBER(7) NOT NULL,
	CONSTRAINT pk_AGENCIA_NAgencia PRIMARY KEY(NAgencia),
	CONSTRAINT fk_AGENCIA_NEndreco FOREIGN KEY(ENDERECO_NEndreco) REFERENCES ENDERECO(NEndereco)

)
TABLESPACE BankingStart
PCTFREE 0
PCTUSED 40
;

CREATE TABLE FUNCIONARIO(
	NFuncionario NUMBER(7) GENERATED ALWAYS AS IDENTITY
	(START WITH 1000 INCREMENT BY 1),
	AGENCIA_NAgencia NUMBER(7) NOT NULL,
	Gerente VARCHAR2(2) NOT NULL, --??????????????????????? não devia ser 1 pra s ou n
	CONSTRAINT pk_NFuncionario PRIMARY KEY(NFuncionario),
	CONSTRAINT fk_NAgencia FOREIGN KEY(AGENCIA_NAgencia) REFERENCES AGENCIA(NAgencia),
	CONSTRAINT ck_FUNCIONARIO_Gerente CHECK(Gerente in('S','N'))
)
TABLESPACE BankingStart
PCTFREE 15 
PCTUSED 40
;


CREATE TABLE CLIENTE(
	iban NUMBER(16) GENERATED ALWAYS AS IDENTITY
	(START WITH 1000000000000000 INCREMENT BY 1),
	idade NUMBER(3) NOT NULL,
	ENDERECO_NEndreco NUMBER(7) NOT NULL,
	AGENCIA_NAgencia NUMBER(7) NOT NULL,
	nif NUMBER(9) NOT NULL,
	nomeCliente VARCHAR2(20) NOT NULL,
	profissao VARCHAR2(20) NOT NULL,
	dataNasc date NOT NULL,
	email VARCHAR2(20),
	password VARCHAR2(10),
	CONSTRAINT cliente_pk PRIMARY KEY (iban),
	CONSTRAINT fk_NAgencia_cliente FOREIGN KEY(AGENCIA_NAgencia) REFERENCES AGENCIA(NAgencia),
	CONSTRAINT fk_NEndreco_cliente FOREIGN KEY(ENDERECO_NEndreco) REFERENCES ENDERECO(NEndereco)
)
TABLESPACE BankingStart
PCTFREE 15 
PCTUSED 40
;


CREATE TABLE CONTA(
	numeroConta NUMBER GENERATED ALWAYS AS IDENTITY
	(START WITH 1000000000000000 INCREMENT BY 1),
	saldo NUMBER(10) NOT NULL,
	titular NUMBER(16) NOT NULL,
	CONSTRAINT pk_numeroConta PRIMARY KEY (numeroConta)
)
TABLESPACE BankingStart
PCTFREE 15 
PCTUSED 40
;

CREATE TABLE CONTACLIENTE(
	CLIENTE_IBAN NUMBER(16) NOT NULL,--numero do cliente
	CONTA_numeroConta NUMBER(16) NOT NULL,
	CONSTRAINT pk_contaCliente PRIMARY KEY (CLIENTE_IBAN, CONTA_numeroConta),
	CONSTRAINT fk_numeroConta   FOREIGN KEY (CONTA_numeroConta)  REFERENCES conta(numeroConta),
	CONSTRAINT fk_IBAN  FOREIGN KEY (CLIENTE_IBAN)  REFERENCES cliente(IBAN)
)
TABLESPACE BankingStart
PCTFREE 15 
PCTUSED 40
;



CREATE TABLE categoria(--abreviação da categoria (salario sal; creche cre; alimentação alm; Desporto des; combustíveis com; saúde sau; 
	abrev_categoria VARCHAR2(3) primary key,  
	nome_categoria VARCHAR2(20) NOT NULL	
)
TABLESPACE BankingStart
PCTFREE 0 
PCTUSED 40
;


CREATE TABLE TRANSACAO(
	numeroTransacao NUMBER GENERATED ALWAYS AS IDENTITY
	(START WITH 1000 INCREMENT BY 1),
	plataforma VARCHAR2(3) NOT NULL,
	CATEGORIA_abrev_categoria VARCHAR2(3) NOT NULL, 
	CONTACLIENTE_Cliente_IBAN NUMBER(7) NOT NULL,
	CONTACLIENTE_CONTA_numeroConta NUMBER(7) NOT NULL,
	valor NUMBER(4) NOT NULL,
    CONSTRAINT pk_numeroTransacao PRIMARY KEY (numeroTransacao),
	CONSTRAINT fk_contaCliente    FOREIGN KEY (CONTACLIENTE_CONTA_numeroConta, CONTACLIENTE_Cliente_IBAN)  REFERENCES CONTACLIENTE(CONTA_NUMEROCONTA, CLIENTE_IBAN),
	CONSTRAINT fk_abrev_categoria   FOREIGN KEY (CATEGORIA_abrev_categoria)  REFERENCES categoria(abrev_categoria),
	CONSTRAINT ck_plataforma CHECK(plataforma IN('ATM','WEB'))
    )
TABLESPACE BankingStart
PCTFREE 15 
PCTUSED 40
;

CREATE TABLE TRANSFERENCIA(
	TRANSACAO_numeroTransacao NUMBER(7) NOT NULL,
	CONTA_numeroConta NUMBER(7) NOT NULL,
	CONSTRAINT fk_numeroTransacao_Transferencia     FOREIGN KEY (TRANSACAO_numeroTransacao )  REFERENCES TRANSACAO(numeroTransacao ),
	CONSTRAINT fk_numeroConta_Transferencia    FOREIGN KEY (CONTA_numeroConta)  REFERENCES CONTA(numeroConta)
)
TABLESPACE BankingStart
PCTFREE 15 
PCTUSED 40
;

CREATE TABLE MOVIMENTO(
	TRANSACAO_numeroTransacao NUMBER(7) NOT NULL,
	operacao VARCHAR2(1) NOT NULL, --levantamento e deposito
	CONSTRAINT fk_numeroTransacao_Movimento  FOREIGN KEY (TRANSACAO_numeroTransacao )  REFERENCES TRANSACAO(numeroTransacao),
	CONSTRAINT ck_operacao CHECK(operacao IN('L','D'))
)
TABLESPACE BankingStart
PCTFREE 15 
PCTUSED 40
;


CREATE TABLE PRODUTO(
	numProduto NUMBER GENERATED ALWAYS AS IDENTITY
	(START WITH 1000 INCREMENT BY 1),
	tipoProduto VARCHAR2(50), --conta jovem e o krlh
	CONTA_numeroConta NUMBER(16) NOT NULL,
	CONSTRAINT produto_pk PRIMARY KEY (numProduto),
	CONSTRAINT fk_NumeroConta_Produto  FOREIGN KEY (CONTA_numeroConta)  REFERENCES conta(numeroConta)
)
TABLESPACE BankingStart
PCTFREE 0 
PCTUSED 40
;

CREATE TABLE ORDEM(
	CONTA_numeroConta NUMBER(7) NOT NULL,
	CONSTRAINT ordem_pk PRIMARY KEY (CONTA_numeroConta),
	CONSTRAINT fk_numeroConta FOREIGN KEY (CONTA_numeroConta)  REFERENCES CONTA(numeroConta)
);



CREATE TABLE CARTAO(
	numero NUMBER GENERATED ALWAYS AS IDENTITY
	(START WITH 1000 INCREMENT BY 1),
	ORDEM_CONTA_numeroConta NUMBER NOT NULL,
	pin NUMBER(4) NOT NULL,
	cvv NUMBER(3) NOT NULL,
	validade VARCHAR2(5) NOT NULL,
	CONSTRAINT fk_numeroConta_Cartao   FOREIGN KEY (ORDEM_CONTA_numeroConta)  REFERENCES ORDEM(CONTA_numeroConta),
	CONSTRAINT pk_numero PRIMARY KEY (numero)
)
TABLESPACE BankingStart
PCTFREE 15 
PCTUSED 40
;


