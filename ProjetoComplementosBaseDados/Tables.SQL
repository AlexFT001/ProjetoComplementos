CREATE TABLE CLIENTE(
	iban NUMBER not GENERATED ALWAYS AS IDENTITY
	(START WITH 1000000000000000 INCREMENT BY 1),,
	idade NUMBER(3) NOT NULL,
	ENDERECO_NEndreco NUMBER(7) NOT NULL,
	AGENCIA_NAgencia NUMBER(7) NOT NULL,
	nif NUMBER(9) NOT NULL,
	nome VARCHAR2(20) NOT NULL,
	profissao VARCHAR2(20) NOT NULL,
	dataNasc date NOT NULL,
	email VARCHAR2(20),
	password VARCHAR2(10),
	CONSTRAINT cliente_pk PRIMARY KEY (iban),
	CONSTRAINT fk_NAgencia FOREIGN KEY(AGENCIA_NAgencia) REFERENCES AGENCIA(NAgencia),
	CONSTRAINT fk_NEndreco FOREIGN KEY(ENDERECO_NEndreco) REFERENCES ENDERECO(NEndereco)
);


CREATE TABLE categoria(
	abrev_categoria VARCHAR2(3) primary key  -???????????
	nome_categoria VARCHAR2(20) NOT NULL,
	
);


CREATE TABLE TRANSACAO(
	numeroTransacao NUMBER GENERATED ALWAYS AS IDENTITY
	(START WITH 1000 INCREMENT BY 1),
	plataforma VARCHAR2(3) NOT NULL, --atm ou web
	CATEGORIA_abrev_categoria VARCHAR2(3) NOT NULL, --abreviação da categoria
	CONTACLIENTE_Cliente_IBAN NUMBER(7) NOT NULL,
	CONTACLIENTE_CONTA_numeroConta NUMBER(7) NOT NULL,
	valor NUMBER(4,3) NOT NULL,
	CONSTRAINT fk_numeroConta    FOREIGN KEY (CONTACLIENTE_CONTA_numeroConta)  REFERENCES CONTACLIENTE(numeroConta),
	CONSTRAINT fk_numIdentifica   FOREIGN KEY (CONTACLIENTE_Cliente_IBAN)  REFERENCES CONTACLIENTE(IBAN),
	CONSTRAINT fk_abrev_categoria   FOREIGN KEY (CATEGORIA_abrev_categoria)  REFERENCES categoria(abrev_categoria),
	CONSTRAINT ck_plataforma CHECK(plataforma IN(ATM,WEB))
);

CREATE TABLE TRANSFERENCIA(
	TRANSACAO_numeroTransacao NUMBER(7) NOT NULL,
	CONTA_numeroConta NUMBER(7) NOT NULL,
	CONSTRAINT fk_numeroTransacao     FOREIGN KEY (TRANSACAO_numeroTransacao )  REFERENCES TRANSACAO(numeroTransacao ),
	CONSTRAINT fk_numeroConta    FOREIGN KEY (CONTA_numeroConta)  REFERENCES CONTA(numeroConta)
);

CREATE TABLE MOVIMENTO(
	TRANSACAO_numeroTransacao NUMBER(7) NOT NULL,
	operacao VARCHAR2(1) NOT NULL, --levantamento e deposito
	CONSTRAINT fk_numeroTransacao   FOREIGN KEY (TRANSACAO_numeroTransacao )  REFERENCES TRANSACAO(numeroTransacao),
	CONSTRAINT ck_operacao CHECK(operacao IN(L,D)),
);


CREATE TABLE CONTA(
	numeroConta NUMBER GENERATED ALWAYS AS IDENTITY
	(START WITH 1000000000000000 INCREMENT BY 1),
	saldo NUMBER(10,3) NOT NULL,
	titular NUMBER(16) NOT NULL,
	CONSTRAINT pk_numeroConta PRIMARY KEY (numeroConta)
);

CREATE TABLE ORDEM(
	CONTA_numeroConta NUMBER(7) NOT NULL,
	CONSTRAINT fk_numeroConta FOREIGN KEY (CONTA_numeroConta)  REFERENCES CONTA(numeroConta),
);



CREATE TABLE CONTACLIENTE(
	CLIENTE_IBAN NUMBER(16) NOT NULL,--numero do cliente
	CONTA_numeroConta NUMBER(16) NOT NULL,
	CONSTRAINT fk_numeroConta   FOREIGN KEY (CONTA_numeroConta)  REFERENCES conta(numeroConta)
	CONSTRAINT fk_IBAN  FOREIGN KEY (CLIENTE_IBAN)  REFERENCES cliente(IBAN)
);

CREATE TABLE CARTAO(
	numero NUMBER GENERATED ALWAYS AS IDENTITY
	(START WITH 1000 INCREMENT BY 1),
	ORDEM_CONTA_numeroConta NUMBER NOT NULL,
	pin NUMBER(4) NOT NULL,
	cvv NUMBER(3) NOT NULL,
	validade VARCHAR2(5) NOT NULL,
	CONSTRAINT fk_numeroConta   FOREIGN KEY (ORDEM_CONTA_numeroConta)  REFERENCES Ordem(CONTA_numeroConta),
	CONSTRAINT pk_numero PRIMARY KEY (numero)
)

CREATE TABLE produto(
	numProduto NUMBER GENERATED ALWAYS AS IDENTITY
	(START WITH 1000 INCREMENT BY 1),,
	tipoProduto VARCHAR2(50), --conta jovem e o krlh
	CONTA_numeroConta NUMBER(16) NOT NULL,
	CONSTRAINT produto_pk PRIMARY KEY (numProduto),
	CONSTRAINT fk_NumeroConta  FOREIGN KEY (CONTA_numeroConta)  REFERENCES conta(numeroConta)
);

CREATE TABLE FUNCIONARIO(
	NFuncionario NUMBER(7) GENERATED ALWAYS AS IDENTITY
	(START WITH 1000 INCREMENT BY 1),
	AGENCIA_NAgencia NUMBER(7) NOT NULL,
	Gerente VARCHAR2(20) NOT NULL,
	CONSTRAINT pk_NFuncionario PRIMARY KEY(NFuncionario),
	CONSTRAINT fk_NAgencia FOREIGN KEY(AGENCIA_NAgencia) REFERENCES AGENCIA(NAgencia),
	CONSTRAINT ck_FUNCIONARIO_Gerente CHECK(S,N)
);

CREATE TABLE AGENCIA(
	NAgencia NUMBER(7) GENERATED ALWAYS AS IDENTITY
	(START WITH 1000 INCREMENT BY 1),
	ENDERECO_NEndreco NUMBER(7) NOT NULL,
	CONSTRAINT pk_AGENCIA_NAgencia PRIMARY KEY(NAgencia),
	CONSTRAINT fk_AGENCIA_NEndreco FOREIGN KEY(ENDERECO_NEndreco) REFERENCES ENDERECO(NEndereco)

);

CREATE TABLE ENDERECO(
	NEndereco NUMBER(7) GENERATED ALWAYS AS IDENTITY
	(START WITH 1000 INCREMENT BY 1),
	Rua VARCHAR2(10) NOT NULL,
	CodPostal NUMBER(7) NOT NULL,
	NumPorta NUMBER(2) NOT NULL,
	Cidade VARCHAR2(10) NOT NULL,
	CONSTRAINT pk_ENDERECO_NEndereco PRIMARY KEY(NEndereco)
);


	